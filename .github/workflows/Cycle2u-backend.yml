name: Cycle2U Build and Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore .NET dependencies
      run: dotnet restore ./backend/Cycle2U.csproj
      
    - name: Clean build cache
      run: |
        rm -rf ./src/bin
        rm -rf ./src/obj
        
    - name: Install EF Core CLI tools
      run: dotnet tool install --global dotnet-ef

    - name: Install Microsoft.EntityFrameworkCore.Sqlite
      run: dotnet add ./backend/Cycle2U.csproj package Microsoft.EntityFrameworkCore.Sqlite
      
    - name: Build .NET backend
      run: dotnet build ./backend/Cycle2U.csproj --configuration Release

    - name: Apply EF Core migration to database
      run: dotnet ef database update --project ./backend/Cycle2U.csproj
      
    - name: Install Swashbuckle.AspNetCore
      run: dotnet add ./backend/Cycle2U.csproj package Swashbuckle.AspNetCore

    - name: Publish .NET backend
      run: dotnet publish ./backend/Cycle2U.csproj --configuration Release --output ./publish

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
    
    - name: Show frontend funding info
      run: |
        cd frontend
        npm fund
        
    - name: install motion 
      run: |
        cd frontend 
        npm install motion

    - name: install framer-motion 
      run: | 
        cd frontend 
        npm install framer-motion
        npm list framer-motion
        
    - name: Install TypeScript dependencies
      run: |
       cd frontend
       npm install --save-dev typescript @types/react @types/node

    - name: install vercel analytics 
      run: |
       cd frontend 
       npm install @vercel/analytics
    
    - name: Fix frontend vulnerabilities
      run: |
        cd frontend
        npm audit fix --force
  
    - name: Disable Next.js telemetry
      run: |
        cd frontend
        npx next telemetry disable

    - name: Configure Next.js build caching
      uses: actions/cache@v3
      with:
        path: frontend/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-
        
    - name: Build Next.js frontend
      run: |
        cd frontend
        npm run build
        
    - name: Install Docker Compose
      run: |
       sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
       sudo chmod +x /usr/local/bin/docker-compose
       docker-compose version

    - name: Run backend with Docker Compose
      run: docker-compose -f docker-compose.yml up --build -d

    - name: Run backend with Docker Compose
      run: docker-compose -f docker-compose.yml up --build -d
